%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
[{achlys , [
    {gc_interval, 45000},
    {sync_dets_on_update , false} ,
    {sync_dets_interval , 3000} ,
    {initial_formation_delay, 5000},
    {formation_check_interval, 3000},
    {initial_task_lookup_delay, 3000},
    {task_lookup_interval, 2000},
    {workers,  #{
            clustering => true,
            cleaning => true
        }
    },
    {boards, [
        achlys@my_grisp_board_1 ,
        achlys@my_grisp_board_2 ,
        achlys@my_grisp_board_3
    ]}
]} ,

{plumtree, [
    {broadcast_exchange_timer , 2000} ,
    {broadcast_mods, [lasp_plumtree_backend]}
]} ,

{partisan , [
    {peer_port, 27000},
    {partisan_peer_service_manager , partisan_hyparview_peer_service_manager} ,
    {acceptor_pool_size, 5}
]} ,

{lasp , [
    {storage_backend , lasp_ets_storage_backend} ,
    {mode , state_based} ,
    {max_gc_counter , 10} ,
    {plumtree_peer_refresh_interval , 2000} ,
    {delta_interval , 2000}
]} ,


%%% start_disk_log = true | false
%%%
%%%     Starts the disk_log_server if the parameter is true (see disk_log(3)). This parameter is to be set to true in an embedded system using this service.
%%%
%%%     Defaults to false.
{kernel, [
    % The primary Logger configuration is a map with the following keys:
    %
    % level = logger:level() | all | none
    %
    %  Specifies the primary log level, that is,
    % log event that are equally or more severe than this level,
    % are forwarded to the primary filters. Less severe log events are immediately discarded.
    %
    % See section Log Level for a listing and description of possible log levels.
    %
    % The initial value of this option is set by the Kernel configuration parameter logger_level.
    % It is changed during runtime with logger:set_primary_config(level,Level).
    {logger_level, error},
    {logger, [
        %% Console logger
        {handler, default, logger_std_h,
           #{level => critical,
           formatter => {logger_formatter , #{single_line => true, max_size => 1024}}}
        },

        %% Disk logger for notice
        {handler, disk_log, logger_disk_log_h,
           #{config => #{
                file => "logs/notice",
                type => wrap,
                max_no_files => 10,
                max_no_bytes => 1048576, % 10 x 1mb
                filesync_repeat_interval => 1000
             },
             level => notice,
             formatter => {logger_formatter , #{single_line => true, max_size => 128}}}
        }
    ]}
]},

{grisp , [
    {drivers , [
        {spi , grisp_spi_drv}
    ]} ,
    {devices , [
        % {spi1, pmod_nav}
    ]}
]}].
