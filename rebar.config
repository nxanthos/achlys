%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
%
% (Partly) Auto-generated by https://github.com/Pouriya-Jahanbakhsh/estuff

{ deps , [
    grisp ,
    {epmd , {git , "https://github.com/erlang/epmd" , {ref , "4d1a59"}}} ,
    {lasp , {git , "https://github.com/Laymer/lasp.git" , {branch , "feature-logger"}}} ,
    {grisp_tools , {git , "https://github.com/grisp/grisp_tools.git" , {branch , "master"}}}
]}.

{ plugins , [
    {rebar3_grisp , {git , "https://github.com/grisp/rebar3_grisp.git" , {branch , "master"}}}
]}.

%% == Erlang ==

{erl_opts , [
    debug_info
]}.

%% == GRiSP ==

{ grisp , [
    {otp , [
        {version , "22.0"}
    ]} ,

    % ========================================
    % Necessary for building OTP from source :
    % ========================================
    % {build , [
    %     {toolchain , [
    %         {directory,"/Path/to/GRiSP/grisp-software/rtems-install/rtems/5"}]}
    % ]} ,

    {deploy , [
    % ==========
    % Mac OS X :
    % ==========
        {pre_script, "rm -rf /Volumes/GRISP/*"},
        {destination, "/Volumes/GRISP"},
        {post_script, "diskutil unmount /Volumes/GRISP"}
    % ==========
    % Linux :
    % ==========
    %     {pre_script , "rm -rf /media/user/GRISP/*"} ,
    %     {destination , "/media/user/GRISP"} ,
    %     {post_script , "umount /media/user/GRISP"}
    % ==========
    % Local :
    % ==========
        {pre_script , "rm -rf /tmp/sd_card/*"},
        {destination, "/tmp/sd_card"}
    ]}
]}.

%% == Shell ==
{ shell , [
    {apps , []} ,
    {config , "./config/test.config.src"}

    % from https://github.com/erlang/rebar3/blob/772503c749f487d8fda8fb6835fdb6dada9a04f3/src/rebar_prv_shell.erl#L91
    % 
    % {env_file, undefined, "env-file", string,
    %  "Path to file of os environment variables to setup "
    %  "before expanding vars in config files."},    
    % 
    % from "make deploy" target : 
    % echo "PEER_IP=$(PEER_IP)" > $(CURDIR)/default.env && \
    % --> not applicable outside rebar3 shell environment
    %
    % {env_file, "./default.env"}
]}.

%% == Relx ==

{ relx , [
%%------------------------------------------------------------------------------
    {release , {achlys , "0.3.3"} , [
        grisp ,
        {epmd , none} ,
        partisan ,
        lasp ,
        achlys
    ]} ,
%%------------------------------------------------------------------------------
    {dev_mode , false} ,
    {generate_start_script , true} ,
    {extended_start_script , true} ,
    {sys_config , "./config/sys.config"} ,
    {vm_args , "./config/vm.args"}
%%------------------------------------------------------------------------------
    % https://github.com/erlang/rebar3/issues/1808, by Fred Hebert
    % Don't include source files
    % {include_src, false} ,

    % Makes code harder to debug, but drops
    % debug data and source info from the final beam
    % {debug_info, strip} ,

    % List of apps that are included
    % but you don't want (maybe wx or somehting?)
    % {exclude_apps, [
        % lager
    % ]} ,

    % Drop modules you don't need in apps you depend on
    % {exclude_modules, [

    % ]}
]}.

{ profiles , [
    {test , [
        {deps , [
             {grisp_emulation , {git , "https://github.com/grisp/grisp_emulation.git" , {branch , "master"}}}
        ]} ,
        {dev_mode , true} ,
        {erl_opts , [
            nowarn_export_all ,
            debug_info
        ]} ,
        {relx , [
            {sys_config_src , "./config/test.config.src"} ,
            {release , {achlys , "0.3.3"} , [
                grisp ,
                {epmd , none} ,
                partisan ,
                lasp ,
                achlys
            ]} ,
            {exclude_apps, [
                % lager
            ]}
        ]}
    ]}
]}.

{cover_enabled, true}.
{cover_export_enabled, true}.

%% == Dialyzer ==

{ dialyzer , [
    {warnings , [underspecs
        ,        no_return
        ,        unmatched_returns
        ,        error_handling]} ,
    {plt_prefix , "achlys"} ,
    {plt_apps , top_level_deps} ,
    {plt_extra_apps , []}
]}.

%% == EDoc ==

{ edoc_opts , [
    {report_missing_types , true} ,
    {source_path , ["src"]} ,
    {report_missing_types , true} ,
    {todo , true} ,
    {preprocess , true} ,
    {packages , false} ,
    {subpackages , false}
]}.

%% == Xref ==

{ xref , [
    {xref_warnings , true} ,
    {xref_extra_paths , []} ,
    {xref_checks , [undefined_functions
        ,           deprecated_function_calls
        ,           undefined_function_calls
        ,           deprecated_functions]}
]}.
